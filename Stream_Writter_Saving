// This is a example of using Stream Writter to save the game in Unity

// To Write the file // Save the file
void SaveStreamWritter
{
    string SaveFilePath = Application.persistenDataPath + "/savegame.sav";    // "savegame.sav" just a save file name, you can change to any name you want.
    StreamWritter sw = new StreamWritter(SaveFilePath);                       // Select the file to save
    sw.WriteLine("hp");                                                       // Valueable = hp
    
    // If finished Saving then use this code
    sw.Close();
}

// To Read the file // Load the file
void LoadStreamWritter
{
    string SaveFilePath = Application.persistenDataPath + "/savegame.sav";    // "savegame.sav" just a save file name, you can change to any name you want.
    
    // Check if file exist
    if(File.Exists(SaveFilePath))
    {
        StreamReader sr = new StreamReader(SaveFilePath);                        // Select the file to Load
        hp = sr.ReadLine();
        
        // If finished Loading then use this code
        sr.Close();
    }
    else
    {
        // If no Save file, then do something
    }
}

// The Problem:
// Need to save variable in the same order as they are loaded
// Not down/updward compatible
//(examples: when you add or remove variables from your savegame, it become corrupt)
